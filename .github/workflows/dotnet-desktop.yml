name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest

    defaults:
      run:
        working-directory: ./SubFolderThatContainsSolutionFile/  # Specify the folder containing your solution file

    env:
      Solution_Name: ICT3101_Calculator.sln                       # Your solution file name
      NUnit_Test_Project_Path: Tests/ICT3101_Calculator.UnitTests/ICT3101_Calculator.UnitTests.csproj   # Path to NUnit tests
      SpecFlow_Test_Project_Path: Tests/SpecFlowCalculatorTests/SpecFlowCalculatorTests.csproj   # Path to SpecFlow tests

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # Run NUnit tests
    - name: Run NUnit Tests
      working-directory: ./Tests/ICT3101_Calculator.UnitTests/   # Path to your NUnit test project
      run: dotnet test --no-build --verbosity normal

    # Run SpecFlow tests
    - name: Run SpecFlow Tests
      working-directory: ./Tests/SpecFlowCalculatorTests/   # Path to your SpecFlow test project
      run: dotnet test --no-build --verbosity normal

    # If you were using WAP, remove or comment out the packaging-related steps
    # Example:
    # - name: Decode the pfx
    #   run: |
    #     $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
    #     $certificatePath = Join-Path -Path $env:Wap_Project_Directory -ChildPath GitHubActionsWorkflow.pfx
    #     [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)
